{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Aymeline\\\\Documents\\\\myapp\\\\src\\\\components\\\\CountryFilter.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CountryFilter(_ref) {\n  let {\n    clients,\n    setFilter\n  } = _ref;\n  function filterByThis(event) {\n    setFilter(event.target.value);\n  }\n\n  // countries extraction\n  let countries = [\"All\"];\n  for (let client of clients) {\n    if (!countries.includes(client.country)) {\n      countries.push(client.country);\n    }\n  }\n\n  // building countries list\n  let options = [];\n  for (let country of countries) {\n    options.push( /*#__PURE__*/_jsxDEV(\"option\", {\n      value: country,\n      children: country\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this));\n  }\n  return /*#__PURE__*/_jsxDEV(\"select\", {\n    name: \"countries\",\n    id: \"countries\",\n    children: options\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n}\n_c = CountryFilter;\nexport default CountryFilter;\nvar _c;\n$RefreshReg$(_c, \"CountryFilter\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","CountryFilter","_ref","clients","setFilter","filterByThis","event","target","value","countries","client","includes","country","push","options","children","fileName","_jsxFileName","lineNumber","columnNumber","name","id","_c","$RefreshReg$"],"sources":["C:/Users/Aymeline/Documents/myapp/src/components/CountryFilter.js"],"sourcesContent":["import React from \"react\";\r\n\r\nfunction CountryFilter({ clients, setFilter}) {\r\n    \r\n    function filterByThis ( event ) {\r\n        setFilter(event.target.value)\r\n    }\r\n\r\n    // countries extraction\r\n    let countries = [\"All\",];\r\n    for (let client of clients) {\r\n        if (! countries.includes(client.country)){\r\n            countries.push(client.country);\r\n        }\r\n    }\r\n\r\n    // building countries list\r\n    let options = [];\r\n    for (let country of countries){\r\n        options.push(\r\n            <option value={country}>{country}</option>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <select name=\"countries\" id=\"countries\">{options}</select>\r\n    );\r\n}\r\n\r\nexport default CountryFilter"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,aAAaA,CAAAC,IAAA,EAAwB;EAAA,IAAvB;IAAEC,OAAO;IAAEC;EAAS,CAAC,GAAAF,IAAA;EAExC,SAASG,YAAYA,CAAGC,KAAK,EAAG;IAC5BF,SAAS,CAACE,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACjC;;EAEA;EACA,IAAIC,SAAS,GAAG,CAAC,KAAK,CAAE;EACxB,KAAK,IAAIC,MAAM,IAAIP,OAAO,EAAE;IACxB,IAAI,CAAEM,SAAS,CAACE,QAAQ,CAACD,MAAM,CAACE,OAAO,CAAC,EAAC;MACrCH,SAAS,CAACI,IAAI,CAACH,MAAM,CAACE,OAAO,CAAC;IAClC;EACJ;;EAEA;EACA,IAAIE,OAAO,GAAG,EAAE;EAChB,KAAK,IAAIF,OAAO,IAAIH,SAAS,EAAC;IAC1BK,OAAO,CAACD,IAAI,eACRb,OAAA;MAAQQ,KAAK,EAAEI,OAAQ;MAAAG,QAAA,EAAEH;IAAO;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAU,CAC7C;EACL;EAEA,oBACInB,OAAA;IAAQoB,IAAI,EAAC,WAAW;IAACC,EAAE,EAAC,WAAW;IAAAN,QAAA,EAAED;EAAO;IAAAE,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAU;AAElE;AAACG,EAAA,GAzBQrB,aAAa;AA2BtB,eAAeA,aAAa;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}